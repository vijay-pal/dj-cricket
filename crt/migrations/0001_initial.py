# Generated by Django 2.1 on 2020-01-28 11:04

import crt.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BatPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bat', models.BooleanField(default=False)),
                ('bat_position', models.IntegerField(default=0)),
                ('bat_runs', models.IntegerField(default=0)),
                ('bat_par_score', models.IntegerField(default=0)),
                ('bat_balls', models.IntegerField(default=0)),
                ('bat_how_out', models.CharField(default='DNB', max_length=32)),
                ('bat_inning_no', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
            ],
            options={
                'verbose_name': 'bat_performance',
                'db_table': 'bat_performances',
            },
        ),
        migrations.CreateModel(
            name='BowlPerformance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bowl', models.BooleanField(default=False)),
                ('bowl_overs', models.FloatField(default=0)),
                ('bowl_runs', models.IntegerField(default=0)),
                ('bowl_maidens', models.IntegerField(default=0)),
                ('bowl_position', models.IntegerField(default=0)),
                ('bowl_pareconomy', models.FloatField(default=0.0)),
                ('bowl_wickets_lbw', models.IntegerField(default=0)),
                ('bowl_wickets_bowled', models.IntegerField(default=0)),
                ('bowl_wickets_stumped', models.IntegerField(default=0)),
                ('bowl_wickets_caught', models.IntegerField(default=0)),
                ('bowl_wickets_hit_wicket', models.IntegerField(default=0)),
                ('bowl_wickets_total', models.IntegerField(default=0)),
                ('bowl_inning_no', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
            ],
            options={
                'verbose_name': 'bowl_performance',
                'db_table': 'bowl_performances',
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('competition_type', models.CharField(max_length=32, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
            ],
            options={
                'verbose_name': 'competition',
                'db_table': 'competitions',
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
            ],
            options={
                'verbose_name': 'league',
                'db_table': 'leagues',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('venue_name', models.CharField(default='', max_length=50)),
                ('toss_decision', models.PositiveSmallIntegerField(choices=[(1, 'bat'), (2, 'field')], default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_super_over', models.BooleanField(default=False)),
                ('is_result', models.BooleanField(default=False)),
                ('is_duck_worth_lewis', models.BooleanField(default=False)),
                ('win_type', models.PositiveSmallIntegerField(choices=[(1, 'by runs'), (2, 'by wickets')], default=0)),
                ('won_by', models.PositiveIntegerField(default=0)),
                ('city_name', models.CharField(blank=True, max_length=50, null=True)),
                ('host_country', models.CharField(blank=True, max_length=50, null=True)),
                ('match_notes', models.TextField(blank=True, max_length=515, null=True)),
                ('number_of_players', models.IntegerField(default=0)),
                ('processing_issue', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crt.Competition')),
            ],
            options={
                'verbose_name': 'match',
                'db_table': 'matches',
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('captain', models.BooleanField(default=False)),
                ('vice_captain', models.BooleanField(default=False)),
                ('wicket_keeper', models.BooleanField(default=False)),
                ('is_umpire', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crt.Match')),
            ],
            options={
                'verbose_name': 'performance',
                'db_table': 'performances',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('image_uri', models.ImageField(blank=True, null=True, upload_to=crt.models.upload_to_path)),
                ('jersey_number', models.PositiveIntegerField(default=0)),
                ('dob', models.DateField(null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
            ],
            options={
                'verbose_name': 'player',
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.FloatField(default=0.0)),
            ],
            options={
                'verbose_name': 'point',
                'db_table': 'points',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('logo_uri', models.ImageField(blank=True, null=True, upload_to=crt.models.upload_to_path)),
                ('club_state', models.CharField(blank=True, max_length=40, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
            ],
            options={
                'verbose_name': 'team',
                'db_table': 'teams',
            },
        ),
        migrations.AddField(
            model_name='point',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crt.Team'),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='crt.Team'),
        ),
        migrations.AddField(
            model_name='performance',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crt.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='first_umpire_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='first_umpire_id', to='crt.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='man_of_the_match',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='man_of_the_match', to='crt.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='match_winner_team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_winner_team', to='crt.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='second_umpire_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='second_umpire_id', to='crt.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_1', to='crt.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_2', to='crt.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='toss_winner_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toss_winner_team', to='crt.Team'),
        ),
        migrations.AddField(
            model_name='competition',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crt.League'),
        ),
        migrations.AddField(
            model_name='bowlperformance',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crt.Match'),
        ),
        migrations.AddField(
            model_name='bowlperformance',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crt.Player'),
        ),
        migrations.AddField(
            model_name='batperformance',
            name='bat_out_bowler',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bat_bowler', to='crt.Player'),
        ),
        migrations.AddField(
            model_name='batperformance',
            name='bat_out_fielder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bat_fielder', to='crt.Player'),
        ),
        migrations.AddField(
            model_name='batperformance',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crt.Match'),
        ),
        migrations.AddField(
            model_name='batperformance',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crt.Player'),
        ),
    ]
